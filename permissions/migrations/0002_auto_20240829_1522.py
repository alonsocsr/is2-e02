# Generated by Django 5.1 on 2024-08-29 15:22
from django.db import migrations
def configurar_roles_predefinidos(apps, schema_editor):
    
    Roles = apps.get_model('permissions', 'Roles')
    
    Group = apps.get_model('auth','Group')
    Permission = apps.get_model('auth','Permission')
    
    roles_predeterminados = [
            {
                'nombre_rol': 'Admin',
                'descripcion': 'Administrador del sistema.',
                'rol_por_defecto': True,
                'permisos': ['_inactivar_contenido','_crear_rol','_modificar_rol','_asignar_rol','_remover_rol','_eliminar_rol','_crear_categoria','_modificar_categoria','_eliminar_categoria','_inactivar_categoria','_editar_perfil','_suspender_cuenta','_ver_tablero_kanban','_modificar_tablero_kanban','_ver_reportes_contenido','_ver_estadisticas_contenido','_ver_cantidad_likes','_administrar_estado_contenido','_visualizar_versiones_contenido'],
            },
            {
                'nombre_rol': 'Editor',
                'descripcion': 'Puede editar un contenido.',
                'rol_por_defecto': True,
                'permisos': ['_editar_contenido', '_visualizar_contenido','_rechazar_contenido','_editar_perfil'],
            },
            {
                'nombre_rol': 'Autor',
                'descripcion': 'Puede editar un contenido.',
                'rol_por_defecto': True,
                'permisos': ['_editar_contenido', '_visualizar_contenido','_rechazar_contenido','_editar_perfil'],
            },
            {
                'nombre_rol': 'Publicador',
                'descripcion': 'Puede publicar un contenido.',
                'rol_por_defecto': True,
                'permisos': ['_publicar_contenido', '_visualizar_contenido','_rechazar_contenido','_editar_perfil'],
            },
            {
                'nombre_rol': 'Suscriptor',
                'descripcion': 'Rol por defecto que poseen los usuarios registrados en el sistema.',
                'rol_por_defecto': True,
                'permisos': ['_acceder_a_categoria_paga', '_visualizar_contenido','_acceder_a_categoria_free','_editar_perfil','_ver_cantidad_likes','_ver_cantidad_dislikes','_ver_cantidad_visualizaciones','_ver_cantidad_compartidos','_comentar_contenido','_eliminar_contenido','_reportar_contenido','_compartir_contenido','_filtrar_por_categoria','_filtrar_por_autor','_filtrar_por_tags'],
            },
            
        ]
    
    for roles in roles_predeterminados:
        rol,created=Roles.objects.get_or_create(
            nombre_rol=roles['nombre_rol'],
            rol_por_defecto=roles['rol_por_defecto'],
            descripcion=roles['descripcion'],
        )
        
        rol.save()
        
        """Crear un grupo con el rol recien creado, para agrupar los permisos"""
        
        grupo,created=Group.objects.get_or_create(name=roles['nombre_rol'])
        
        """asignar permisos al grupo"""
        permisos=Permission.objects.filter(codename__in=roles['permisos'])
        
        grupo.permissions.set(permisos)
        
        
        """asignar permisos a nivel modelo"""
        rol.permisos.set(permisos)
        rol.save()
    
    
    

class Migration(migrations.Migration):

    dependencies = [
        ('permissions', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(configurar_roles_predefinidos),
    ]