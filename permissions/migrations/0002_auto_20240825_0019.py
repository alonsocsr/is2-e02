# Generated by Django 5.1 on 2024-08-25 00:19

from django.db import migrations
def configurar_roles_predefinidos(apps, schema_editor):
    
    Roles = apps.get_model('permissions', 'Roles')
    
    Group = apps.get_model('auth','Group')
    Permission = apps.get_model('auth','Permission')
    
    roles_predeterminados = [
            {
                'nombre_rol': 'Admin',
                'descripcion': 'Administrador del sistema.',
                'rol_por_defecto': True,
                'permisos': ['inactivar_contenido', 'crear_rol', 'modificar_rol','asignar_rol','remover_rol','eliminar_rol','crear_categoria','modificar_categoria','eliminar_categoria','inactivar_categoria','editar_perfil', 'suspender_cuenta', 'ver_tablero_kanban', 'modificar_tablero_kanban','ver_reportes_contenido', 'ver_estadisticas_contenido','ver_cantidad_likes','administrar_estado_contenido','visualizar_versiones_contenido'],
            },
            {
                'nombre_rol': 'Editor',
                'descripcion': 'Puede editar un contenido.',
                'rol_por_defecto': True,
                'permisos': ['editar_contenido', 'visualizar_contenido','rechazar_contenido','editar_perfil'],
            },
            {
                'nombre_rol': 'Autor',
                'descripcion': 'Puede editar un contenido.',
                'rol_por_defecto': True,
                'permisos': ['editar_contenido', 'visualizar_contenido','rechazar_contenido','editar_perfil'],
            },
            {
                'nombre_rol': 'Publicador',
                'descripcion': 'Puede publicar un contenido.',
                'rol_por_defecto': True,
                'permisos': ['publicar_contenido', 'visualizar_contenido','rechazar_contenido','editar_perfil'],
            },
            {
                'nombre_rol': 'Suscriptor',
                'descripcion': 'Rol por defecto que poseen los usuarios registrados en el sistema.',
                'rol_por_defecto': True,
                'permisos': ['acceder_a_categoria_paga', 'visualizar_contenido','acceder_a_categoria_free','editar_perfil','ver_cantidad_likes','ver_cantidad_dislikes','ver_cantidad_visualizaciones','ver_cantidad_compartidos','comentar_contenido','eliminar_contenido','reportar_contenido','compartir_contenido','filtrar_por_categoria','filtrar_por_autor','filtrar_por_tags'],
            },
            
        ]
    
    for roles in roles_predeterminados:
        rol,created=Roles.objects.get_or_create(
            nombre_rol=roles['nombre_rol'],
            rol_por_defecto=roles['rol_por_defecto'],
            descripcion=roles['descripcion'],
        )
        
        rol.save()
        
        """Crear un grupo con el rol recien creado, para agrupar los permisos"""
        
        grupo,created=Group.objects.get_or_create(name=roles['nombre_rol'])
        
        """asignar permisos al grupo"""
        permisos=Permission.objects.filter(codename__in=roles['permisos'])
        
        grupo.permissions.set(permisos)
        
        
        """asignar permisos a nivel modelo"""
        rol.permisos.set(permisos)
        rol.save()
    
    
    

class Migration(migrations.Migration):

    dependencies = [
        ('permissions', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(configurar_roles_predefinidos),
    ]
