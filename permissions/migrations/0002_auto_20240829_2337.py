# Generated by Django 5.1 on 2024-08-29 15:22
from django.db import migrations


def crear_permisos(apps, schema_editor):
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    permisos = [
        ('crear_contenido', 'Crear Contenido'),
        ('visualizar_contenido', 'Visualizar Contenido'),
        ('editar_contenido', 'Editar Contenido'),
        ('publicar_contenido', 'Publicar Contenido'),
        ('rechazar_contenido', 'Rechazar Contenido'),
        ('categoria_no_moderada', 'Categoria No Moderada'),
        ('inactivar_contenido', 'Inactivar Contenido'),
        ('cambiar_estado_contenido', 'Cambiar Estado Contenido'),
        ('crear_rol', 'Crear Rol'),
        ('modificar_rol', 'Modificar Rol'),
        ('asignar_rol', 'Asignar Rol'),
        ('remover_rol', 'Modificar Rol'),
        ('eliminar_rol', 'Eliminar Rol'),
        ('crear_categoria', 'Crear Categoria'),
        ('modificar_categoria', 'Modificar Categoria'),
        ('eliminar_categoria', 'Eliminar Categoria'),
        ('inactivar_categoria', 'Inactivar Categoria'),
        ('acceder_a_categoria_paga', 'Acceder a Categoria Paga'),
        ('acceder_a_categoria_free', 'Acceder a Categoria Free'),
        ('editar_perfil', 'Editar Perfil'),
        ('suspender_cuenta', 'Suspender Cuenta'),
        ('ver_tablero_kanban', 'Ver Tablero Kanban'),
        ('modificar_tablero_kanban', 'Modificar Tablero Kanban'),
        ('ver_reportes_contenido', 'Ver Reportes de Contenido'),
        ('ver_estadisticas_contenido', 'Ver Estadisticas de Contenido'),
        ('ver_cantidad_likes', 'Ver Cantidad de Likes'),
        ('ver_cantidad_dislikes', 'Ver Cantidad de Dislikes'),
        ('ver_cantidad_visualizaciones', 'Ver Cantidad de visualizaciones'),
        ('ver_cantidad_compartidos', 'Ver Cantidad de Compartidos'),
        ('comentar_contenido', 'Comentar Contenido'),
        ('eliminar_contenido', 'Eliminar Contenido'),
        ('reportar_contenido', 'Reportar Contenido'),
        ('compartir_contenido', 'Compartir Contenido'),
        ('filtrar_por_categoria', 'Filtrar por Categoria'),
        ('filtrar_por_autor', 'Filtrar por Autor'),
        ('filtrar_por_tags', 'Filtrar por Tags'),
        ('modificar_estado_contenido', 'Modificar Estado de Contenido'),
        ('administrar_estado_contenido', 'Administrar Estado de Contenido'),
        ('eliminar_estado_contenido', 'Eliminar Estado de Contenido'),
        ('visualizar_versiones_contenido', 'Visualizar versiones de Contenido'),
        ('restaurar_verisiones_contenido', 'Restaurar Versiones de Contenido'),
        ('destacar_contenido', 'Destacar Contenido'),
    ]

    content_type = ContentType.objects.get_for_model(
        apps.get_model('permissions', 'Roles'))

    for codename, name in permisos:
        Permission.objects.get_or_create(
            codename=codename,
            name=name,
            content_type=content_type
        )


def configurar_roles_predefinidos(apps, schema_editor):
    """
    Funcion: generar los roles predeterminados del sistema
    Par√°metros:
    -------
    apps, schema_editor

    Returns: 
    -------
    none

    """
    Roles = apps.get_model('permissions', 'Roles')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    roles_predeterminados = [
        {
            'nombre_rol': 'Admin',
            'descripcion': 'Administrador del sistema.',
            'rol_por_defecto': True,
            'permisos': ['destacar_contenido','inactivar_contenido', 'crear_rol', 'modificar_rol', 'asignar_rol', 'remover_rol', 'eliminar_rol', 'crear_categoria', 'modificar_categoria', 'eliminar_categoria', 'inactivar_categoria', 'editar_perfil', 'suspender_cuenta', 'ver_tablero_kanban', 'modificar_tablero_kanban', 'ver_cantidad_likes', 'administrar_estado_contenido', 'visualizar_versiones_contenido', 'visualizar_contenido', 'ver_estadisticas_contenido', 'ver_reportes_contenido', 'ver_cantidad_dislikes', 'ver_cantidad_visualizaciones', 'ver_cantidad_compartidos', 'modificar_estado_contenido', 'eliminar_estado_contenido'],
        },
        {
            'nombre_rol': 'Editor',
            'descripcion': 'Puede editar un contenido.',
            'rol_por_defecto': True,
            'permisos': ['editar_contenido', 'visualizar_contenido', 'rechazar_contenido', 'editar_perfil', 'ver_tablero_kanban', 'modificar_tablero_kanban', 'cambiar_estado_contenido', 'ver_cantidad_likes', 'ver_cantidad_dislikes', 'ver_cantidad_visualizaciones', 'ver_cantidad_compartidos', 'modificar_estado_contenido'],
        },
        {
            'nombre_rol': 'Autor',
            'descripcion': 'Puede editar un contenido.',
            'rol_por_defecto': True,
            'permisos': ['crear_contenido', 'visualizar_contenido', 'rechazar_contenido', 'editar_perfil', 'inactivar_contenido', 'cambiar_estado_contenido', 'ver_tablero_kanban', 'ver_reportes_contenido', 'ver_estadisticas_contenido', 'ver_cantidad_likes', 'ver_cantidad_dislikes', 'ver_cantidad_visualizaciones', 'ver_cantidad_compartidos', 'modificar_estado_contenido', 'visualizar_versiones_contenido', 'restaurar_verisiones_contenido'],
        },
        {
            'nombre_rol': 'Publicador',
            'descripcion': 'Puede publicar un contenido.',
            'rol_por_defecto': True,
            'permisos': ['publicar_contenido', 'visualizar_contenido', 'rechazar_contenido', 'editar_perfil', 'cambiar_estado_contenido', 'ver_tablero_kanban', 'modificar_tablero_kanban', 'ver_cantidad_likes', 'ver_cantidad_dislikes', 'ver_cantidad_visualizaciones', 'ver_cantidad_compartidos', 'modificar_estado_contenido'],
        },
        {
            'nombre_rol': 'Suscriptor',
            'descripcion': 'Rol por defecto que poseen los usuarios registrados en el sistema.',
            'rol_por_defecto': True,
            'permisos': ['visualizar_contenido', 'acceder_a_categoria_free', 'editar_perfil', 'ver_cantidad_likes', 'ver_cantidad_dislikes', 'ver_cantidad_visualizaciones', 'ver_cantidad_compartidos', 'comentar_contenido', 'eliminar_contenido', 'reportar_contenido', 'compartir_contenido', 'filtrar_por_categoria', 'filtrar_por_autor', 'filtrar_por_tags'],
        },

    ]

    for rol_data in roles_predeterminados:
        rol, created = Roles.objects.get_or_create(
            nombre_rol=rol_data['nombre_rol'],
            rol_por_defecto=rol_data['rol_por_defecto'],
            descripcion=rol_data['descripcion'],
        )

        # Crear o obtener el grupo correspondiente al rol
        grupo, created = Group.objects.get_or_create(
            name=rol_data['nombre_rol'])

        # Asignar permisos al grupo y al rol
        permisos = Permission.objects.filter(codename__in=rol_data['permisos'])

        if permisos.exists():
            grupo.permissions.set(permisos)  # Asignar permisos al grupo
            rol.permisos.set(permisos)  # Asignar permisos al rol
            rol.save()
            grupo.save()
        else:
            print(f"No se encontraron permisos para {rol_data['nombre_rol']}")


class Migration(migrations.Migration):

    dependencies = [
        ('permissions', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(crear_permisos),  # Crear permisos primero
        # Luego asignar roles
        migrations.RunPython(configurar_roles_predefinidos),
    ]
