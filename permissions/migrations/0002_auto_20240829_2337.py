# Generated by Django 5.1 on 2024-08-29 15:22
from django.db import migrations


def crear_permisos(apps, schema_editor):
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    permisos = [
        ('_crear_contenido', 'Crear Contenido'), ('_visualizar_contenido', 'Visualizar Contenido'), ('_editar_contenido', 'Editar Contenido'), ('_publicar_contenido', 'Publicar Contenido'), ('_rechazar_contenido', 'Rechazar Contenido'), ('_categoria_no_moderada', 'Categoria No Moderada'), ('_inactivar_contenido', 'Inactivar Contenido'), ('_cambiar_estado_contenido', 'Cambiar Estado Contenido'), ('_crear_rol', 'Crear Rol'), ('_modificar_rol', 'Modificar Rol'), ('_asignar_rol', 'Asignar Rol'), ('_remover_rol', 'Modificar Rol'), 
        ('_eliminar_rol', 'Eliminar Rol'), ('_crear_categoria', 'Crear Categoria'), ('_modificar_categoria', 'Modificar Categoria'), ('_eliminar_categoria', 'Eliminar Categoria'), ('_inactivar_categoria', 'Inactivar Categoria'), ('_acceder_a_categoria_paga', 'Acceder a Categoria Paga'), ('_acceder_a_categoria_free', 'Acceder a Categoria Free'), ('_editar_perfil', 'Editar Perfil'), ('_suspender_cuenta', 'Suspender Cuenta'), ('_ver_tablero_kanban', 'Ver Tablero Kanban'), ('_modificar_tablero_kanban', 'Modificar Tablero Kanban'),
        ('_ver_reportes_contenido', 'Ver Reportes de Contenido'), ('_ver_estadisticas_contenido', 'Ver Estadisticas de Contenido'), ('_ver_cantidad_likes', 'Ver Cantidad de Likes'), ('_ver_cantidad_dislikes', 'Ver Cantidad de Dislikes'), ('_ver_cantidad_visualizaciones', 'Ver Cantidad de visualizaciones'), ('_ver_cantidad_compartidos', 'Ver Cantidad de Compartidos'), ('_comentar_contenido', 'Comentar Contenido'), ('_eliminar_contenido', 'Eliminar Contenido'), ('_reportar_contenido', 'Reportar Contenido'), ('_compartir_contenido','Compartir Contenido'), 
        ('_filtrar_por_categoria', 'Filtrar por Categoria'), ('_filtrar_por_autor', 'Filtrar por Autor'), ('_filtrar_por_tags', 'Filtrar por Tags'), ('_modificar_estado_contenido', 'Modificar Estado de Contenido'), ('_administrar_estado_contenido', 'Administrar Estado de Contenido'), ('_eliminar_estado_contenido', 'Eliminar Estado de Contenido'), ('_visualizar_versiones_contenido', 'Visualizar versiones de Contenido'), ('_restaurar_verisiones_contenido', 'Restaurar Versiones de Contenido')
    ]

    content_type = ContentType.objects.get_for_model(
        apps.get_model('permissions', 'Roles'))

    for codename, name in permisos:
        Permission.objects.get_or_create(
            codename=codename,
            name=name,
            content_type=content_type
        )


def configurar_roles_predefinidos(apps, schema_editor):
    """
    Funcion: generar los roles predeterminados del sistema
    Par√°metros:
    -------
    apps, schema_editor

    Returns: 
    -------
    none

    """
    Roles = apps.get_model('permissions', 'Roles')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    roles_predeterminados = [
        {
            'nombre_rol': 'Admin',
            'descripcion': 'Administrador del sistema.',
            'rol_por_defecto': True,
            'permisos': ['_inactivar_contenido', '_crear_rol', '_modificar_rol', '_asignar_rol', '_remover_rol', '_eliminar_rol', '_crear_categoria', '_modificar_categoria', '_eliminar_categoria', '_inactivar_categoria', '_editar_perfil', '_suspender_cuenta', '_ver_tablero_kanban', '_modificar_tablero_kanban', '_ver_cantidad_likes', '_administrar_estado_contenido', '_visualizar_versiones_contenido', '_visualizar_contenido', '_ver_estadisticas_contenido', '_ver_reportes_contenido', '_ver_cantidad_dislikes', '_ver_cantidad_visualizaciones', '_ver_cantidad_compartidos', '_modificar_estado_contenido', '_eliminar_estado_contenido'],
        },
        {
            'nombre_rol': 'Editor',
            'descripcion': 'Puede editar un contenido.',
            'rol_por_defecto': True,
            'permisos': ['_editar_contenido', '_visualizar_contenido', '_rechazar_contenido', '_editar_perfil', '_ver_tablero_kanban', '_modificar_tablero_kanban', '_cambiar_estado_contenido', '_ver_cantidad_likes', '_ver_cantidad_dislikes', '_ver_cantidad_visualizaciones', '_ver_cantidad_compartidos', '_modificar_estado_contenido'],
        },
        {
            'nombre_rol': 'Autor',
            'descripcion': 'Puede editar un contenido.',
            'rol_por_defecto': True,
            'permisos': ['_crear_contenido', '_visualizar_contenido', '_rechazar_contenido', '_editar_perfil', '_inactivar_contenido', '_cambiar_estado_contenido', '_ver_tablero_kanban', '_ver_reportes_contenido', '_ver_estadisticas_contenido', '_ver_cantidad_likes', '_ver_cantidad_dislikes', '_ver_cantidad_visualizaciones', '_ver_cantidad_compartidos', '_modificar_estado_contenido', '_visualizar_versiones_contenido', '_restaurar_verisiones_contenido'],
        },
        {
            'nombre_rol': 'Publicador',
            'descripcion': 'Puede publicar un contenido.',
            'rol_por_defecto': True,
            'permisos': ['_publicar_contenido', '_visualizar_contenido', '_rechazar_contenido', '_editar_perfil', '_cambiar_estado_contenido', '_ver_tablero_kanban', '_modificar_tablero_kanban', '_ver_cantidad_likes', '_ver_cantidad_dislikes', '_ver_cantidad_visualizaciones', '_ver_cantidad_compartidos', '_modificar_estado_contenido'],
        },
        {
            'nombre_rol': 'Suscriptor',
            'descripcion': 'Rol por defecto que poseen los usuarios registrados en el sistema.',
            'rol_por_defecto': True,
            'permisos': ['_visualizar_contenido', '_acceder_a_categoria_free', '_editar_perfil', '_ver_cantidad_likes', '_ver_cantidad_dislikes', '_ver_cantidad_visualizaciones', '_ver_cantidad_compartidos', '_comentar_contenido', '_eliminar_contenido', '_reportar_contenido', '_compartir_contenido', '_filtrar_por_categoria', '_filtrar_por_autor', '_filtrar_por_tags'],
        },

    ]

    for rol_data in roles_predeterminados:
        rol, created = Roles.objects.get_or_create(
            nombre_rol=rol_data['nombre_rol'],
            rol_por_defecto=rol_data['rol_por_defecto'],
            descripcion=rol_data['descripcion'],
        )

        # Crear o obtener el grupo correspondiente al rol
        grupo, created = Group.objects.get_or_create(
            name=rol_data['nombre_rol'])

        # Asignar permisos al grupo y al rol
        permisos = Permission.objects.filter(codename__in=rol_data['permisos'])

        if permisos.exists():
            grupo.permissions.set(permisos)  # Asignar permisos al grupo
            rol.permisos.set(permisos)  # Asignar permisos al rol
            rol.save()
            grupo.save()
        else:
            print(f"No se encontraron permisos para {rol_data['nombre_rol']}")


class Migration(migrations.Migration):

    dependencies = [
        ('permissions', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(crear_permisos),  # Crear permisos primero
        # Luego asignar roles
        migrations.RunPython(configurar_roles_predefinidos),
    ]